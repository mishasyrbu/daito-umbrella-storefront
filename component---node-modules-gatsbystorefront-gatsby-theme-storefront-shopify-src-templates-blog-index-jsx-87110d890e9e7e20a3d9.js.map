{"version":3,"sources":["webpack:///./node_modules/@gatsbystorefront/gatsby-theme-storefront-shopify/src/utils/substrDescription.js","webpack:///./node_modules/@gatsbystorefront/gatsby-theme-storefront-shopify/src/components/Pagination/index.jsx","webpack:///./node_modules/@gatsbystorefront/gatsby-theme-storefront-shopify/src/templates/blog/BlogPage.jsx","webpack:///./node_modules/@gatsbystorefront/gatsby-theme-storefront-shopify/src/templates/blog/index.jsx"],"names":["substrDescription","description","length","trimmedString","substr","lastIndexOf","Math","min","Pagination","props","numPages","currentPage","shopifyThemePath","prevLink","nextLink","justifyContent","as","GatsbyLink","to","mx","rel","variant","Array","from","map","_","i","link","pageNum","max","key","BlogPage","blogTitle","flexDirection","px","pt","style","maxWidth","alignItems","fontSize","m","data","articles","nodes","article","shopifyId","title","excerpt","content","publishedAt","fields","sx","width","my","py","textAlign","pageContext","blog","Layout","Helmet","titleTemplate","storeName","defer","name","articlesQuery"],"mappings":"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","file":"component---node-modules-gatsbystorefront-gatsby-theme-storefront-shopify-src-templates-blog-index-jsx-87110d890e9e7e20a3d9.js","sourcesContent":["const substrDescription = (description = '', length = false) => {\n  if (length && description.length > length) {\n    //trim the string to the maximum length\n    let trimmedString = description.substr(0, length);\n    //re-trim if we are in the middle of a word\n\n    if (trimmedString.lastIndexOf('.') > 0) {\n      trimmedString = trimmedString.substr(\n        0,\n        trimmedString.lastIndexOf('.') + 1\n      );\n    } else {\n      trimmedString =\n        trimmedString.substr(\n          0,\n          Math.min(trimmedString.length, trimmedString.lastIndexOf(' '))\n        ) + '...';\n    }\n    return trimmedString;\n  } else {\n    return description;\n  }\n};\n\nexport default substrDescription;\n","import React, { Fragment } from 'react';\nimport GatsbyLink from 'gatsby-link';\nimport { Flex, Button } from 'rebass';\n\nconst Pagination = props => {\n  const { numPages, currentPage, shopifyThemePath } = props;\n  const showNumbers = 2;\n\n  let prevLink = false;\n  let nextLink = false;\n\n  if (currentPage !== 1) {\n    prevLink = shopifyThemePath + '/' + (currentPage - 1);\n  }\n  if (currentPage === 2) {\n    prevLink = shopifyThemePath;\n  }\n  if (currentPage !== numPages) {\n    nextLink = shopifyThemePath + '/' + (currentPage + 1);\n  }\n\n  return (\n    <Fragment>\n      {numPages > 1 ? (\n        <Flex justifyContent=\"center\">\n          {prevLink ? (\n            <Button\n              as={GatsbyLink}\n              to={prevLink}\n              mx={2}\n              rel=\"prev\"\n              variant=\"pagination\"\n            >\n              {'<'}\n            </Button>\n          ) : (\n            ''\n          )}\n          {Array.from({ length: numPages }).map((_, i) => {\n            let pageNum = i + 1;\n\n            if (\n              pageNum >= Math.max(1, currentPage - showNumbers) &&\n              pageNum <= Math.min(currentPage + showNumbers, numPages)\n            ) {\n              if (pageNum === currentPage) {\n                return (\n                  <Button mx={2} variant=\"pagination-active\" key={pageNum}>\n                    {pageNum}\n                  </Button>\n                );\n              } else {\n                let link;\n                pageNum === 1\n                  ? (link = shopifyThemePath)\n                  : (link = shopifyThemePath + '/' + pageNum);\n                return (\n                  <Button\n                    as={GatsbyLink}\n                    to={link}\n                    mx={2}\n                    variant=\"pagination\"\n                    key={pageNum}\n                  >\n                    {pageNum}\n                  </Button>\n                );\n              }\n            } else {\n              return '';\n            }\n          })}\n          {nextLink ? (\n            <Button\n              as={GatsbyLink}\n              to={nextLink}\n              mx={2}\n              rel=\"next\"\n              variant=\"pagination\"\n            >\n              >\n            </Button>\n          ) : (\n            ''\n          )}\n        </Flex>\n      ) : (\n        ''\n      )}\n    </Fragment>\n  );\n};\n\nexport default Pagination;\n","import React from 'react';\nimport GatsbyLink from 'gatsby-link';\nimport { Flex, Box, Text, Heading } from 'rebass';\n\nimport Pagination from '../../components/Pagination';\nimport substrDescription from '../../utils/substrDescription.js';\n\nconst BlogPage = ({ blogTitle, ...props }) => {\n  return (\n    <Flex\n      flexDirection=\"column\"\n      px={2}\n      pt={3}\n      mx=\"auto\"\n      style={{ maxWidth: 1300 }}\n      alignItems=\"center\"\n    >\n      <Heading as=\"h1\" fontSize={[30, 36, 42]} m={3}>\n        {blogTitle}\n      </Heading>\n\n      {props.data.articles.nodes.map(article => {\n        let {\n          shopifyId,\n          title,\n          excerpt,\n          content,\n          publishedAt,\n          fields: { shopifyThemePath },\n        } = article;\n\n        return (\n          <Flex\n            key={shopifyId}\n            flexDirection=\"column\"\n            sx={{\n              maxWidth: '800px',\n              width: [370, '100%'],\n              mx: 3,\n              my: 3,\n            }}\n          >\n            <Box my={2}>\n              <Heading\n                as={GatsbyLink}\n                to={shopifyThemePath}\n                variant=\"link\"\n                fontSize={[30, 36]}\n              >\n                {title}\n              </Heading>\n            </Box>\n            <Box fontSize={2}>{publishedAt}</Box>\n            <Box>{excerpt ? excerpt : substrDescription(content, 500)}</Box>\n          </Flex>\n        );\n      })}\n      <Box width={1} px={4} py={2} key=\"pagination\">\n        <Text textAlign=\"center\">\n          <Pagination {...props.pageContext} />\n        </Text>\n      </Box>\n    </Flex>\n  );\n};\n\nexport default BlogPage;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport { Helmet } from 'react-helmet';\n\nimport Layout from '../../components/Layout';\nimport BlogPage from './BlogPage';\nimport { storeName } from '../../../gatsbystorefront-config';\n\nexport default props => {\n  const { title: blogTitle } = props.data.blog.nodes[0];\n\n  return (\n    <Layout>\n      <Helmet\n        title={blogTitle}\n        titleTemplate={`%s â€” ${storeName}`}\n        defer={false}\n      >\n        <meta name=\"description\" content={blogTitle} />\n      </Helmet>\n      <BlogPage {...props} blogTitle={blogTitle} />\n    </Layout>\n  );\n};\n\nexport const articlesQuery = graphql`\n  query BlogQuery($shopifyId: String!, $limit: Int, $skip: Int) {\n    articles: allShopifyArticle(\n      filter: { blog: { shopifyId: { eq: $shopifyId } } }\n      limit: $limit\n      skip: $skip\n      sort: { fields: publishedAt }\n    ) {\n      nodes {\n        shopifyId\n        title\n        excerpt\n        content\n        publishedAt(formatString: \"ddd MMMM Do, YYYY\")\n        fields {\n          shopifyThemePath\n        }\n      }\n    }\n    blog: allShopifyBlog(filter: { shopifyId: { eq: $shopifyId } }) {\n      nodes {\n        shopifyId\n        title\n        fields {\n          shopifyThemePath\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}